snippet debug
#include "bits/stdc++.h"

using namespace std;
using ll = long long;
using pii = pair<int,int>;

 
template <typename A, typename B>
string to_string(pair<A, B> p);
 
template <typename A, typename B, typename C>
string to_string(tuple<A, B, C> p);
 
template <typename A, typename B, typename C, typename D>
string to_string(tuple<A, B, C, D> p);
 
string to_string(const string& s) {
  return '"' + s + '"';
}
 
string to_string(const char* s) {
  return to_string((string) s);
}
 
string to_string(bool b) {
  return (b ? "true" : "false");
}
 
string to_string(vector<bool> v) {
  bool first = true;
  string res = "{";
  for (int i = 0; i < static_cast<int>(v.size()); i++) {
    if (!first) {
      res += ", ";
    }
    first = false;
    res += to_string(v[i]);
  }
  res += "}";
  return res;
}
 
template <size_t N>
string to_string(bitset<N> v) {
  string res = "";
  for (size_t i = 0; i < N; i++) {
    res += static_cast<char>('0' + v[i]);
  }
  return res;
}
 
template <typename A>
string to_string(A v) {
  bool first = true;
  string res = "{";
  for (const auto &x : v) {
    if (!first) {
      res += ", ";
    }
    first = false;
    res += to_string(x);
  }
  res += "}";
  return res;
}
 
template <typename A, typename B>
string to_string(pair<A, B> p) {
  return "(" + to_string(p.first) + ", " + to_string(p.second) + ")";
}
 
template <typename A, typename B, typename C>
string to_string(tuple<A, B, C> p) {
  return "(" + to_string(get<0>(p)) + ", " + to_string(get<1>(p)) + ", " + to_string(get<2>(p)) + ")";
}
 
template <typename A, typename B, typename C, typename D>
string to_string(tuple<A, B, C, D> p) {
  return "(" + to_string(get<0>(p)) + ", " + to_string(get<1>(p)) + ", " + to_string(get<2>(p)) + ", " + to_string(get<3>(p)) + ")";
}
 
void debug_out() { cerr << endl; }
 
template <typename Head, typename... Tail>
void debug_out(Head H, Tail... T) {
  cerr << " " << to_string(H);
  debug_out(T...);
}

#ifdef LOCAL
#define debug(...) cerr << "[" << #__VA_ARGS__ << "]:", debug_out(__VA_ARGS__)
#else
#define debug(...) 42
#endif

int main()
{
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  ll n,k,m;
  cin >> n >> k >> m;
  vector<array<int,2>> b;
  for (int i =0; i < n; i++) {
    int x;
    cin >> x;
    if (b.empty() || b.back()[0] != x) {
      b.push_back({x,0});
    }
    b.back()[1]++;
    if (b.back()[1] == k)
      b.pop_back();
  }
  n = b.size();
  ll len = 0;
  for (auto x : b)
    len += x[1];
  if (b.size() == 0 || m == 1) {
    cout << len << '\n';
    return 0;
  }
  ll r = 0, er = 0;
  for (int i =0 ; i < n; i++) {
    if (b[n-1-i][0] != b[i][0]) break;
    int sum = b[n-1-i][1] + b[i][1];
    er += sum/k*k;
    sum %= k;
    if (sum) break;
    r++;
  }
  if (r==n) {
    cout << len*(m%2) << '\n';
    return 0;
  }
  else if (2*r+1 == n) {
    ll sum = b[r][1]*m;
    sum %= k;
    if (sum)
      cout << len - b[r][1]+sum << '\n';
    else
      cout << 0 << '\n';
    return 0;
  }
  else {
    assert(2*r < n);
    cout << len*m - er*(m-1) << '\n';
    return 0;
  }
}
endsnippet
